.386
.MODEL FLAT, STDCALL
OPTION CASEMAP: NONE
EXTERN  GetStdHandle@4: PROC
EXTERN  WriteConsoleA@20: PROC
EXTERN  ReadConsoleA@20: PROC
EXTERN  ExitProcess@4: PROC
EXTERN  lstrlenA@4: PROC
EXTERN  wsprintfA: PROC



.DATA

BUF DB 200 DUP (?)
DIN DD ?
DOUT DD ?
LEN DD ?
MSG1 DB "Enter first number", 13, 10, 0
MSG2 DB "Enter second number", 13, 10, 0
MSG3 DB "Result: %d", 13, 10, 0
X DD ?
Y DD ?
DIFF DD ?
LWRTN DD ?
LREAD DD ?
HEX DD 16


.CODE

MAIN PROC
	PUSH -10
	CALL GetStdHandle@4

	MOV DIN, EAX

	PUSH -11
	CALL GetStdHandle@4

	MOV DOUT, EAX

	PUSH OFFSET MSG1
	CALL lstrlenA@4

	MOV LEN, EAX

	PUSH 0
	PUSH OFFSET LWRTN
	PUSH LEN
	PUSH OFFSET MSG1
	PUSH DOUT
	CALL WriteConsoleA@20

	PUSH 0
	PUSH OFFSET LREAD
	PUSH 5
	PUSH OFFSET BUF
	PUSH DIN
	CALL ReadConsoleA@20

	SUB LREAD, 2
	MOV ECX, LREAD
	MOV ESI, OFFSET BUF
	XOR EAX, EAX
	XOR EBX, EBX
	HEXTODECX:
		MOV BL, [ESI]
		CMP BL, 64
			JBE NEXT
			SUB BL, 7
		NEXT:
		SUB BL, '0'		
		MUL HEX
		ADD AL, BL
		INC ESI
	LOOP HEXTODECX

	MOV X, EAX

	PUSH 0
	PUSH OFFSET LREAD
	PUSH 5
	PUSH OFFSET BUF
	PUSH DIN
	CALL ReadConsoleA@20
	
	SUB LREAD, 2
	MOV ECX, LREAD
	MOV ESI, OFFSET BUF
	XOR EAX, EAX
	XOR EBX, EBX
	HEXTODECY:
		MOV BL, [ESI]
		CMP BL, 64
			JBE NEXT1
			SUB BL, 7
		NEXT1:
		SUB BL, '0'
		MUL HEX
		ADD AL, BL
		INC ESI
	LOOP HEXTODECY

	MOV Y, EAX

	MOV EAX, X
	SUB EAX, Y
	MOV DIFF, EAX

		PUSH DIFF
		PUSH OFFSET MSG3
		PUSH OFFSET BUF
	CALL wsprintfA

	PUSH OFFSET BUF
	CALL lstrlenA@4

	MOV LEN, EAX

		PUSH 0
		PUSH OFFSET LWRTN
		PUSH LEN
		PUSH OFFSET BUF
		PUSH DOUT
	CALL WriteConsoleA@20

	MOV ECX,03FFFFFFFH
	L1: LOOP L1

		PUSH 0
	CALL ExitProcess@4

	MAIN ENDP
END MAIN
